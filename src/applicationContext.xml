<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util-4.1.xsd">
	 
	 
	 <!-- 配置读取db.properties文件 -->
	<context:property-placeholder location="classpath:db.properties"/>

	
	<!-- 配置扫描Service 得到的是@service@Autowired -->
	<context:component-scan base-package="com.situ.ssm.service"/>
	
	<!-- *********************** -->
	<!-- 数据库相关的配置 用的是C3P0的数据库连接池,所以类是下面的class -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}"/>
		<property name="jdbcUrl" value="${jdbc.url}"/>
		<property name="user" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	<!-- 配置SqlSessionFactory 单独的MyBaits需要自己去new这个SqlSessionFactory，
	现在和Spring结合后交给Spring容器帮我们创建好，默认bean的单例的。
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 加载MyBatis核心配置文件 -->
		<property name="configLocation" value="classpath:mybatis.xml"/>
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 配置Mapper扫描 -->
	<!-- MapperScannerConfigurer:mapper扫描器，将包下面的mapper接口
		自动创建代理对象，自动创建到Spring容器中， bean
		的id就是mapper的类名(首字母小写)-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 配置Mapper扫描包 -->
		<property name="basePackage" value="com.situ.ssm.dao"/>
	</bean>
	
	<!-- ****************************************** -->
	<!-- 事物相关 -->
	<!-- 事物管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源, 事物的操作是和数据库相关的，因为中间出现异常，
		 需要数据库回滚数据。-->
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 传播行为 -->
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" read-only="true" />
			<tx:method name="query*" propagation="SUPPORTS" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 切面 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.situ.ssm.service.impl.*.*(..))"/>
	</aop:config>
</beans>